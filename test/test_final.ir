declare i32 @map[10][10]
declare i32 @indegree[10]
declare i32 @queue[10]
define void @topo(i32 %t0)
{
	declare i32 %l1 ; 1:n
	declare i32 %l2 ; 1:m
	declare i32 %l3 ; 1:t
	declare i32 %l4 ; 1:i
	declare i32 %l5 ; 1:j
	declare i32 %l6
	declare i1 %t12
	declare i1 %t15
	declare i32 %t17
	declare i32* %t18
	declare i32 %t19
	declare i1 %t20
	declare i32 %t24
	declare i32 %t26
	declare i32* %t27
	declare i32 %t28
	declare i32 %t29
	declare i32* %t30
	declare i1 %t32
	declare i32 %t34
	declare i32* %t35
	declare i32 %t36
	declare i32* %t37
	declare i32 %t38
	declare i32 %t40
	declare i32* %t41
	declare i32 %t42
	declare i32 %t43
	declare i32 %t44
	declare i32* %t45
	declare i32 %t48
	declare i32 %t50
	declare i1 %t53
	declare i32 %t55
	declare i32* %t56
	declare i32 %t57
	declare i32 %t58
	entry
	%l1 = %t0
.L7:
.L8:
.L9:
.L10:
	%l2 = 0
	%l3 = 0
	%l4 = 1
	%l5 = 1
.L11:
	%t12 = icmp le %l4,%l1
	bc %t12, label .L13, label .L51
.L13:
	%l5 = 1
.L14:
	%t15 = icmp le %l5,%l1
	bc %t15, label .L16, label .L25
.L16:
	%t17 = mul %l5,4
	%t18 = add @indegree,%t17
	%t19 = *%t18
	%t20 = icmp eq %t19,0
	bc %t20, label .L21, label .L22
.L21:
	%l2 = %l5
	br label .L25
	br label .L23
.L22:
.L23:
	%t24 = add %l5,1
	%l5 = %t24
	br label .L14
.L25:
	%t26 = mul %l3,4
	%t27 = add @queue,%t26
	*%t27 = %l2
	%t28 = add %l3,1
	%l3 = %t28
	%t29 = mul %l2,4
	%t30 = add @indegree,%t29
	*%t30 = -1
	%l5 = 1
.L31:
	%t32 = icmp le %l5,%l1
	bc %t32, label .L33, label .L49
.L33:
	%t34 = mul %l2,400
	%t35 = add @map,%t34
	%t36 = mul %l5,4
	%t37 = add %t35,%t36
	%t38 = *%t37
	bc %t38, label .L39, label .L46
.L39:
	%t40 = mul %l5,4
	%t41 = add @indegree,%t40
	%t42 = *%t41
	%t43 = sub %t42,1
	%t44 = mul %l5,4
	%t45 = add @indegree,%t44
	*%t45 = %t43
	br label .L47
.L46:
.L47:
	%t48 = add %l5,1
	%l5 = %t48
	br label .L31
.L49:
	%t50 = add %l4,1
	%l4 = %t50
	br label .L11
.L51:
	%l4 = 0
.L52:
	%t53 = icmp lt %l4,%l1
	bc %t53, label .L54, label .L59
.L54:
	%t55 = mul %l4,4
	%t56 = add @queue,%t55
	%t57 = *%t56
	call void @putint(i32 %t57)
	%l6 = 10
	call void @putch(i32 %l6)
	%t58 = add %l4,1
	%l4 = %t58
	br label .L52
.L59:
.L60:
	exit
}
define i32 @main()
{
	declare i32 %l0
	declare i32 %l1 ; 1:n
	declare i32 %l2 ; 1:p
	declare i32 %l3 ; 1:i
	declare i32 %l4
	declare i1 %t9
	declare i32 %t11
	declare i1 %t13
	declare i32 %t15
	declare i32* %t16
	declare i32 %t17
	declare i32* %t18
	declare i32 %t19
	declare i32* %t20
	declare i32 %t21
	declare i32 %t22
	declare i32 %t23
	declare i32* %t24
	declare i32 %t25
	declare i32 %t27
	entry
	%l0 = 0
.L5:
.L6:
.L7:
	%l3 = 1
	%l1 = 5
.L8:
	%t9 = icmp le %l3,%l1
	bc %t9, label .L10, label .L28
.L10:
	%t11 = call i32 @getint()
	%l2 = %t11
.L12:
	%t13 = icmp ne %l2,0
	bc %t13, label .L14, label .L26
.L14:
	%t15 = mul %l3,400
	%t16 = add @map,%t15
	%t17 = mul %l2,4
	%t18 = add %t16,%t17
	*%t18 = 1
	%t19 = mul %l2,4
	%t20 = add @indegree,%t19
	%t21 = *%t20
	%t22 = add %t21,1
	%t23 = mul %l2,4
	%t24 = add @indegree,%t23
	*%t24 = %t22
	%t25 = call i32 @getint()
	%l2 = %t25
	br label .L12
.L26:
	%t27 = add %l3,1
	%l3 = %t27
	br label .L8
.L28:
	%l4 = %l1
	call void @topo(i32 %l4)
	%l0 = 0
	br label .L29
.L29:
	exit %l0
}
